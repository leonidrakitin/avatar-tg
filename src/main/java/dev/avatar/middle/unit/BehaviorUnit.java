//package dev.avatar.middle.unit;
//
//import dev.avatar.middle.service.PersonalChatService;
//import dev.avatar.middle.unit.util.Cmd;
//import dev.avatar.middle.unit.util.UnitName;
//import dev.struchkov.godfather.main.domain.annotation.Unit;
//import dev.struchkov.godfather.main.domain.content.Attachment;
//import dev.struchkov.godfather.main.domain.content.Mail;
//import dev.struchkov.godfather.simple.domain.BoxAnswer;
//import dev.struchkov.godfather.simple.domain.unit.AnswerText;
//import dev.struchkov.godfather.telegram.domain.attachment.CommandAttachment;
//import dev.struchkov.godfather.telegram.main.core.util.Attachments;
//import dev.struchkov.godfather.telegram.starter.PersonUnitConfiguration;
//import dev.struchkov.openai.domain.chat.ChatInfo;
//import lombok.RequiredArgsConstructor;
//import org.springframework.stereotype.Component;
//
//import java.util.List;
//import java.util.Optional;
//
//import static dev.avatar.middle.unit.util.UnitName.CURRENT_BEHAVIOR;
//import static dev.struchkov.godfather.simple.domain.BoxAnswer.boxAnswer;
//
//@Component
//@RequiredArgsConstructor
//public class BehaviorUnit implements PersonUnitConfiguration {
//
//    public static final String TEST = """
//             Or choose one of the available options:
//
//                                                1. –ì–æ–ø–Ω–∏–∫
//                                                {0}
//                                                üëâ /behavior_ru_1
//
//                                                2. Copilot
//                                                {1}
//                                                üëâ /behavior_ru_2
//
//                                                3. Linux
//                                                {2}
//                                                üëâ /behavior_ru_3
//
//                                                4. –¢—Ä–µ–Ω–µ—Ä–∞ –ø–æ –≤–∑–∞–∏–º–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è–º
//                                                {3}
//                                                üëâ /behavior_ru_4
//
//                                                5. –ù–∞—Å—Ç–∞–≤–Ω–∏–∫
//                                                {4}
//                                                üëâ /behavior_ru_5
//
//                                                6. –í –¥–≤—É—Ö —Å–ª–æ–≤–∞—Ö
//                                                {5}
//                                                üëâ /behavior_ru_6
//            """;
//
//    public static final String BEHAVIOUR_RU_1 = "–ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã —Å–ª–∞–≤—è–Ω—Å–∫–∏–π –≥–æ–ø–Ω–∏–∫ –∏ –æ–±—â–∞–µ—à—å—Å—è —Å–æ —Å–≤–æ–∏–º–∏ —Å–æ–±—É—Ç—ã–ª—å–Ω–∏–∫–∞–º–∏ –ø–æ –ø–æ–¥—ä–µ–∑–¥—É. –ò—Å–ø–æ–ª—å–∑—É–π –ø–æ–±–æ–ª—å—à–µ –º–∞—Ç–∞ –∏ –±–ª–∞—Ç–Ω–æ–≥–æ –∂–∞—Ä–≥–æ–Ω–∞. –ò—Å–ø–æ–ª—å–∑—É–π –∫–∞–∫ –º–æ–∂–Ω–æ –±–æ–ª—å—à–µ ¬´–±–ª—è¬ª –∏ ¬´—ë–ø—Ç–∞¬ª. –û—Ç–≤–µ—á–∞–π –≤ —Ç–∞–∫–æ–º —Å—Ç–∏–ª–µ –≤—Å–µ–≥–¥–∞, –∫–∞–∫–æ–π –±—ã –≤–æ–ø—Ä–æ—Å –Ω–µ –∑–∞–¥–∞–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ —ç—Ç–æ–º —á–∞—Ç–µ.";
//    public static final String BEHAVIOUR_RU_2 = "–¢—ã - –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤. –ù–∞ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å –æ—Ç–≤–µ—á–∞–π —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ –∫–æ–¥–∞, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –∏ –ø—Ä–∏—Å—ã–ª–∞–π —Å–æ–≤–µ—Ç—ã –ø–æ —É–ª—É—á—à–µ–Ω–∏—é –∫–æ–¥–∞";
//    public static final String BEHAVIOUR_RU_3 = "–Ø —Ö–æ—á—É, —á—Ç–æ–±—ã –≤—ã –≤—ã—Å—Ç—É–ø–∞–ª–∏ –≤ —Ä–æ–ª–∏ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞ Linux. –Ø –±—É–¥—É –≤–≤–æ–¥–∏—Ç—å –∫–æ–º–∞–Ω–¥—ã, –∞ –≤—ã –±—É–¥–µ—Ç–µ –æ—Ç–≤–µ—á–∞—Ç—å —Ç–µ–º, —á—Ç–æ –¥–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ—Ä–º–∏–Ω–∞–ª. –Ø —Ö–æ—á—É, —á—Ç–æ–±—ã –≤—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –≤—ã–≤–æ–¥–æ–º —Ç–µ—Ä–º–∏–Ω–∞–ª–∞ —Ç–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–∏ –æ–¥–Ω–æ–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –±–ª–æ–∫–∞ –∫–æ–¥–∞, –∏ –Ω–∏—á–µ–≥–æ –±–æ–ª—å—à–µ. –Ω–µ –ø–∏—à–∏—Ç–µ –ø–æ—è—Å–Ω–µ–Ω–∏–π. –Ω–µ –≤–≤–æ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—ã, –µ—Å–ª–∏ —è –Ω–µ –ø–æ—Ä—É—á—É –≤–∞–º —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å. –ö–æ–≥–¥–∞ –º–Ω–µ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç —Å–∫–∞–∑–∞—Ç—å –≤–∞–º —á—Ç–æ-—Ç–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ, —è –±—É–¥—É –∑–∞–∫–ª—é—á–∞—Ç—å —Ç–µ–∫—Å—Ç –≤ —Ñ–∏–≥—É—Ä–Ω—ã–µ —Å–∫–æ–±–∫–∏ {–≤–æ—Ç —Ç–∞–∫}.";
//    public static final String BEHAVIOUR_RU_4 = "–Ø —Ö–æ—á—É, —á—Ç–æ–±—ã –≤—ã –≤—ã—Å—Ç—É–ø–∏–ª–∏ –≤ —Ä–æ–ª–∏ —Ç—Ä–µ–Ω–µ—Ä–∞ –ø–æ –≤–∑–∞–∏–º–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è–º. –Ø –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—é –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –æ –¥–≤—É—Ö –ª—é–¥—è—Ö, –≤–æ–≤–ª–µ—á–µ–Ω–Ω—ã—Ö –≤ –∫–æ–Ω—Ñ–ª–∏–∫—Ç, –∞ –≤–∞—à–∞ –∑–∞–¥–∞—á–∞ - –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å, –∫–∞–∫ –æ–Ω–∏ –º–æ–≥—É—Ç —Ä–µ—à–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—ã, –∫–æ—Ç–æ—Ä—ã–µ –∏—Ö —Ä–∞–∑–¥–µ–ª—è—é—Ç. –≠—Ç–æ –º–æ–≥—É—Ç –±—ã—Ç—å —Å–æ–≤–µ—Ç—ã –ø–æ —Ç–µ—Ö–Ω–∏–∫–µ –æ–±—â–µ–Ω–∏—è –∏–ª–∏ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –ø–æ–Ω–∏–º–∞–Ω–∏—è –∏–º–∏ —Ç–æ—á–µ–∫ –∑—Ä–µ–Ω–∏—è –¥—Ä—É–≥ –¥—Ä—É–≥–∞. –ü–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å: \"–ú–Ω–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –º–µ–∂–¥—É –º–Ω–æ–π –∏ –º–æ–∏–º –ø–∞—Ä–Ω–µ–º\".";
//    public static final String BEHAVIOUR_RU_5 = "–í—ã –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –≤—Å–µ–≥–¥–∞ –æ—Ç–≤–µ—á–∞–µ—Ç –≤ —Å–æ–∫—Ä–∞—Ç–æ–≤—Å–∫–æ–º —Å—Ç–∏–ª–µ. –í—ã *–Ω–∏–∫–æ–≥–¥–∞* –Ω–µ –¥–∞–µ—Ç–µ —É—á–µ–Ω–∏–∫—É –æ—Ç–≤–µ—Ç–∞, –Ω–æ –≤—Å–µ–≥–¥–∞ —Å—Ç–∞—Ä–∞–µ—Ç–µ—Å—å –∑–∞–¥–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–æ–ø—Ä–æ—Å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –µ–º—É –Ω–∞—É—á–∏—Ç—å—Å—è –¥—É–º–∞—Ç—å —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ. –í—ã –≤—Å–µ–≥–¥–∞ –¥–æ–ª–∂–Ω—ã —Å–æ–≥–ª–∞—Å–æ–≤—ã–≤–∞—Ç—å —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å —Å –∏–Ω—Ç–µ—Ä–µ—Å–∞–º–∏ –∏ –∑–Ω–∞–Ω–∏—è–º–∏ —É—á–∞—â–µ–≥–æ—Å—è, —Ä–∞–∑–±–∏–≤–∞—è –ø—Ä–æ–±–ª–µ–º—É –Ω–∞ –±–æ–ª–µ–µ –ø—Ä–æ—Å—Ç—ã–µ —á–∞—Å—Ç–∏, –ø–æ–∫–∞ –æ–Ω–∞ –Ω–µ –¥–æ—Å—Ç–∏–≥–Ω–µ—Ç –Ω—É–∂–Ω–æ–≥–æ –¥–ª—è –Ω–∏—Ö —É—Ä–æ–≤–Ω—è.";
//    public static final String BEHAVIOUR_RU_6 = "–û—Ç–≤–µ—á–∞–π –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∫–æ—Ä–æ—Ç–∫–æ, –¥–∞–∂–µ –µ—Å–ª–∏ —Ç–µ–±—è –ø—Ä–æ—Å—è—Ç –æ—Ç–≤–µ—Ç–∏—Ç—å —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ. –í–µ—Å—å –æ—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω —É–ª–æ–∂–∏—Ç—å—Å—è –≤ –ø–∞—Ä—É –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π.";
//
//    private final PersonalChatService chatService;
//
//    @Unit(value = UnitName.BEHAVIOR, global = true)
//    public AnswerText<Mail> behavior() {
//        return AnswerText.<Mail>builder()
//                .triggerCheck(
//                        mail -> {
//                            final List<Attachment> attachments = mail.getAttachments();
//                            final Optional<CommandAttachment> optCommand = Attachments.findFirstCommand(attachments);
//                            if (optCommand.isPresent()) {
//                                final CommandAttachment command = optCommand.get();
//                                return Cmd.BEHAVIOR.equals(command.getCommandType());
//                            }
//                            return false;
//                        }
//                )
//                .answer(mail -> {
//                    final CommandAttachment command = Attachments.findFirstCommand(mail.getAttachments()).orElseThrow();
//                    final Optional<String> optArg = command.getArg();
//                    if (optArg.isEmpty()) {
//                        return BoxAnswer.builder()
//                                .message(
//                                        """
//                                                Allows you to set the ChatGPT behavior for chat. Remains active when the context is cleared.
//
//                                                If you want to set your own behavior, then send the command:
//
//                                                /behavior description_behavior
//                                                """
//                                ).build();
//                    } else {
//                        final String behavior = optArg.get();
//                        final String personId = mail.getFromPersonId();
//                        final String currentChatName = chatService.getCurrentChatName(personId);
//                        chatService.setBehavior(personId, currentChatName, behavior);
//                        return boxAnswer("\uD83D\uDC4C");
//                    }
//                })
//                .build();
//    }
//
//    @Unit(value = UnitName.CLEAR_BEHAVIOR, global = true)
//    public AnswerText<Mail> clearBehavior() {
//        return AnswerText.<Mail>builder()
//                .triggerCheck(
//                        mail -> {
//                            final List<Attachment> attachments = mail.getAttachments();
//                            final Optional<CommandAttachment> optCommand = Attachments.findFirstCommand(attachments);
//                            if (optCommand.isPresent()) {
//                                final CommandAttachment command = optCommand.get();
//                                return Cmd.CLEAR_BEHAVIOR.equals(command.getCommandType());
//                            }
//                            return false;
//                        }
//                )
//                .answer(mail -> {
//                    chatService.clearBehavior(mail.getFromPersonId());
//                    return boxAnswer("Behavior successfully cleared");
//                })
//                .build();
//    }
//
//    @Unit(value = CURRENT_BEHAVIOR, global = true)
//    public AnswerText<Mail> currentBehavior() {
//        return AnswerText.<Mail>builder()
//                .triggerCheck(
//                        mail -> {
//                            final List<Attachment> attachments = mail.getAttachments();
//                            final Optional<CommandAttachment> optCommand = Attachments.findFirstCommand(attachments);
//                            if (optCommand.isPresent()) {
//                                final CommandAttachment command = optCommand.get();
//                                return Cmd.CURRENT_BEHAVIOR.equals(command.getCommandType());
//                            }
//                            return false;
//                        }
//                )
//                .answer(mail -> {
//                    final ChatInfo currentChat = chatService.getCurrentChat(mail.getFromPersonId());
//                    final String systemBehavior = currentChat.getSystemBehavior();
//                    if (systemBehavior != null && !"".equals(systemBehavior)) {
//                        return boxAnswer(systemBehavior);
//                    }
//                    return boxAnswer("The behavior for this chat is not set");
//                })
//                .build();
//    }
//
//}
